##G00305555
##Gesture UI Project


##Purpose of the application

This project has been created to investigate the potential for use, and identify the gestures available
using the leap motion controller. The leap motion controller uses 2 cameras and infrared LEDs to track the motions
of the joints, hands and fingers.


##Gestures identified for application

Display Gestures possible fro the JavaScript library.
The most common gestures using the API are

Swipe Right
Swipe Left
Swipe Up
Swipe Down
Key Tap
Screen Tap
Circle Right
Circle Left
Incomplete circle left
Incomplete circle right



Touch Gestures
Virtual touching is accomplished using a touch zone area.
The range is between [1,-1]. +1 represents not touching, 0 hovering and -1 touching.
In this demo i have created a circle canvas to change color as the different zones are interacted with.

Blue: nothing happening
Green: hovering effect
Red: touching.

This type of gesture simulates button pressing.


##Hardware used for application
The gesture are identified using a Leap Motion Controller.This controller


##Architecture

##The Leap Motion SDK
The Leap SDK is cross platform OS X, Windows and Linux.
Programming languages available are C++, C#, Java, Python, JavaScript and Objective-C.
For the purpose of this exercise I have chosen to use Leapjs and Threejs. Both can be used
within the browser to create application for WebGL.

##Environments
Unity, Unreal Engine and Unity Orion all currently support the Leap.


The  Leapjs which used with other JavaScript libraries such as Threejs and a browser.
